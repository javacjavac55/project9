<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
		PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
		"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ProductMapper">
 	
	<resultMap id="productSelectMap" type="com.model2.mvc.service.domain.Product">
		<result property="prodNo"		column="p_prod_no"			jdbcType="NUMERIC" />
		<result property="prodName"		column="prod_name"			jdbcType="VARCHAR" />
		<result property="prodDetail"	column="prod_detail"		jdbcType="VARCHAR" />
		<result property="manuDate"		column="manufacture_day" 	jdbcType="VARCHAR" />
		<result property="price"		column="price" 				jdbcType="NUMERIC" />
		<result property="fileName"		column="image_file"			jdbcType="VARCHAR"/>
		<result property="regDate"		column="reg_date"			jdbcType="DATE" />
		<result property="proTranCode"	column="t_tran_status_code"	jdbcType="VARCHAR" />
	</resultMap>
	
	<!-- SQL : INSERT -->
	<insert id="addProduct" parameterType="com.model2.mvc.service.domain.Product" >
	 	INSERT
		INTO product ( prod_no , prod_name , prod_detail , manufacture_day , price, image_file, reg_date ) 
		VALUES ( seq_product_prod_no.nextval , 
				#{prodName:VARCHAR} , 
				#{prodDetail:VARCHAR} , 
				#{manuDate:VARCHAR} , 
				<if test="price==0">null</if>
				<if test="price!=0">#{price}</if>, 
				#{fileName:VARCHAR} , 
				SYSDATE )
	 </insert>
	 
	 <!-- SQL : SELECT ONE -->
	 <select id="getProduct" parameterType="java.lang.Integer"	resultMap="productSelectMap">
		SELECT p.prod_no AS p_prod_no , p.prod_name , p.prod_detail , p.manufacture_day , p.price, p.image_file, p.reg_date		
		FROM product p
		WHERE p.prod_no = #{value}
	 </select>
	 
	 <!-- SQL : UPDATE -->
	 <update id="updateProduct"	parameterType="com.model2.mvc.service.domain.Product" >
	   	UPDATE product
	   	<set>
	   		prod_name 	= #{prodName} ,
			prod_detail	= #{prodDetail},
			manufacture_day = #{manuDate:DATE} ,
			price =	#{price},
			image_file = #{fileName}
	   	</set>
	   	WHERE prod_no = #{prodNo}
	 </update>
		 
	<!-- SQL : SELECT LIST -->
	<select  id="getProductList"  parameterType="search"	resultMap="productSelectMap">
	  	SELECT *
	  	FROM (	SELECT inner_table.* , ROWNUM AS row_seq
	  					FROM		(	SELECT p.prod_no AS p_prod_no,p.prod_name,p.prod_detail,p.manufacture_day,p.price,p.image_file,p.reg_date,t.tran_status_code AS t_tran_status_code
											FROM product p,transaction t
											WHERE p.prod_no=t.prod_no(+)
											<if test="searchCondition != null">
												<if test="searchCondition == 0 and searchKeyword !='' ">
									 				AND p.prod_no LIKE '%'||#{searchKeyword}||'%'
												</if>
												<if test="searchCondition == 1 and searchKeyword !='' ">
									 				AND p.prod_name LIKE '%'||#{searchKeyword}||'%'
												</if>
												<if test="searchCondition == 2 and searchKeyword !='' ">
									 				AND p.price BETWEEN #{minPrice} AND #{maxPrice}
												</if>
											</if>
											<if test="filterCondition != null">
												<choose>
													<when test="filterCondition == 0">
										 				AND t.tran_status_code IS NULL
													</when>
													<when test="filterCondition == 1">
										 				AND t.tran_status_code='1'
													</when>
													<when test="filterCondition == 2">
										 				AND t.tran_status_code='2'
													</when>
													<when test="filterCondition == 3">
										 				AND t.tran_status_code='3'
													</when>
													<when test="filterCondition == 4">
										 			
													</when>
													<otherwise>
										 				AND t.tran_status_code=#{filterCondition}
													</otherwise>
												</choose>
											</if>
											<choose>
												<when test="sortCondition != null">
													<if test="sortCondition == 0">
														ORDER BY p.prod_no DESC
													</if>
													<if test="sortCondition == 1">
														ORDER BY p.price
													</if>
													<if test="sortCondition == 2">
														ORDER BY p.price DESC
													</if>
												</when>
												<otherwise>
													ORDER BY p.prod_no DESC
												</otherwise>
											</choose>
											 ) inner_table
						<![CDATA[WHERE ROWNUM <= #{endRowNum} )]]>
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum} 
	 </select>
	 
	<!-- SQL : SELECT ROW Count -->	 
	 <select  id="getTotalCount"  parameterType="search"	 resultType="int">
	  	SELECT COUNT(*)
	  	FROM(	SELECT p.prod_no AS p_prod_no,p.prod_name,p.prod_detail,p.manufacture_day,p.price,p.image_file,p.reg_date,t.tran_status_code AS t_tran_status_code
				FROM product p,transaction t
				WHERE p.prod_no=t.prod_no(+)
				<if test="searchCondition != null">
					<if test="searchCondition == 0 and searchKeyword !='' ">
		 				AND p.prod_no LIKE '%'||#{searchKeyword}||'%'
					</if>
					<if test="searchCondition == 1 and searchKeyword !='' ">
		 				AND p.prod_name LIKE '%'||#{searchKeyword}||'%'
					</if>
					<if test="searchCondition == 2 and searchKeyword !='' ">
		 				AND p.price BETWEEN #{minPrice} AND #{maxPrice}
					</if>
				</if>
				<if test="filterCondition != null">
					<choose>
						<when test="filterCondition == 0">
			 				AND t.tran_status_code IS NULL
						</when>
						<when test="filterCondition == 1">
			 				AND t.tran_status_code='1'
						</when>
						<when test="filterCondition == 2">
			 				AND t.tran_status_code='2'
						</when>
						<when test="filterCondition == 3">
			 				AND t.tran_status_code='3'
						</when>
						<when test="filterCondition == 4">
			 				
						</when>
						<otherwise>
			 				AND t.tran_status_code=#{filterCondition}
						</otherwise>
					</choose>
				</if>
				<choose>
					<when test="sortCondition != null">
						<if test="sortCondition == 0">
							ORDER BY p.prod_no DESC
						</if>
						<if test="sortCondition == 1">
							ORDER BY p.price
						</if>
						<if test="sortCondition == 2">
							ORDER BY p.price DESC
						</if>
					</when>
					<otherwise>
						ORDER BY p.prod_no DESC
					</otherwise>
				</choose>
			) countTable						
	 </select>
	 
	 <select id="getRandomList" parameterType="java.lang.Integer" resultMap="productSelectMap">
		SELECT *
		FROM( SELECT p.prod_no AS p_prod_no,p.prod_name,p.prod_detail,p.manufacture_day,p.price,p.image_file,p.reg_date
				FROM product p, transaction t
				WHERE p.prod_no=t.prod_no(+) AND t.prod_no IS NULL
				ORDER BY dbms_random.value )
		<![CDATA[WHERE ROWNUM <= #{value}]]>
	 </select>
	 
</mapper>